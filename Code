#imports
from pygame import *
from random import randint
from time import time as timer


#classes
class GameSprite(sprite.Sprite):
    #class constructor
    def __init__(self, player_image, player_x, player_y, player_speed,player_width,player_height):
        super().__init__()
        # each sprite must store an image property
        self.image = transform.scale(image.load(player_image), (player_width, player_height))
        self.speed = player_speed
        # each sprite must store the rect property it is inscribed in
        self.rect = self.image.get_rect()
        self.rect.x = player_x
        self.rect.y = player_y

    def reset(self):
        window.blit(self.image, (self.rect.x, self.rect.y))

class Player(GameSprite):
    def update_L(self):
        keys = key.get_pressed()
        if keys[K_w] and self.rect.y > 5:
            self.rect.y -= self.speed
        if keys[K_s] and self.rect.y < win_height - 155:
            self.rect.y += self.speed
    def update_R(self):
        keys = key.get_pressed()
        if keys[K_UP] and self.rect.y > 5:
            self.rect.y -= self.speed
        if keys[K_DOWN] and self.rect.y < win_height - 155:
            self.rect.y += self.speed

#window
colours = (200, 255, 255)
win_width = 600
win_height = 500
window = display.set_mode((600,500))
display.set_caption("Ping-Pong")
window.fill(colours)
game = True

racket1 = Player('racket.png', 30, 200, 4, 50, 150) 
racket2 = Player('racket.png', 520, 200, 4, 50, 150)
ball = GameSprite('ball.png', 200, 200, 4, 50, 50)

speed_x = 3
speed_y = 3

font.init()
font1 = font.Font(None, 36)

#game loop
clock = time.Clock()
FPS = 60
finish = False

while game:
    
    for e in event.get():
        if e.type == QUIT:
            game = False

    if ball.rect.x<0 or ball.rect.x>win_width-50:
        lbl = font1.render('You lose', True, (255, 0, 0))
        window.blit(lbl, (200, 200))
        finish = True
    if finish != True:
        ball.rect.x +=  speed_x
        ball.rect.y += speed_y
        if ball.rect.y<0 or ball.rect.y > win_height-50:
            speed_y *= -1
        if sprite.collide_rect(racket1, ball) or sprite.collide_rect(racket2, ball):
            speed_x *= -1

         


        window.fill(colours)
        racket1.reset()
        racket2.reset()
        ball.reset()
        racket1.update_L()
        racket2.update_R()
    
    display.update()
    clock.tick(FPS)
